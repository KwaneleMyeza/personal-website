Online Resume. 

Starting a Django project: 


********************************************************************************

---

### **1. Home Page**
- **Title**: Your name (e.g., "Thendo Malima")
- **Content**: 
  - A professional headshot or banner.
  - A brief tagline or introduction (e.g., "Passionate Software Engineer | Cloud Computing & DevOps Enthusiast").
  - Navigation links to other sections (e.g., About, Resume, Projects, Contact).

---

### **2. About Section**
- **Content**:
  - A short biography.
  - Your skills and technologies you're proficient in.
  - A description of your passions and motivations (e.g., impact of technology on daily life).

---

### **3. Resume Section**
- **Content**:
  - Professional summary.
  - Education details.
  - Work experience (company names, roles, responsibilities, and achievements).
  - Certifications and awards.

---

### **4. Projects Section**
- **Content**:
  - Showcase your projects with:
    - Title and brief description.
    - Technologies used.
    - Links to live demos or GitHub repositories.
    - Screenshots or videos of the projects.

---

### **5. Contact Section**
- **Content**:
  - A contact form (fields: name, email, message).
  - Your email address and phone number (optional).
  - Links to LinkedIn, GitHub, and other professional profiles.

---

### **6. Extras (Optional)**
- **Blog**:
  - Share articles about your learnings, experiences, or tech topics.
- **Testimonials**:
  - Feedback or recommendations from colleagues or clients.
- **Interactive Features**:
  - A timeline of your career journey.
  - A downloadable PDF resume.

---

### **Django Structure**
- **Models**:
  - `About`: For storing your bio and skills.
  - `Experience`: For work experience details.
  - `Education`: For academic background.
  - `Project`: For project details.
  - `Contact`: To handle form submissions.
- **Templates**:
  - Base layout template (e.g., header, footer, navigation).
  - Separate templates for each section.
- **Views**:
  - Class-based or function-based views to render content dynamically.
- **URLs**:
  - Define clear paths for sections (e.g., `/`, `/about`, `/resume`, `/projects`, `/contact`).

---

********************************************************************************
1. Set-up a virtual environment
    Setting up a virtual environment before starting your Django project. 
    A virtual environment helps isolate your project’s dependencies, 
    ensuring they don’t conflict with packages installed globally or other projects. 

    python -m venv env
    source env/bin/activate
    deactivate
    pip install django
    pip freeze > requirements.txt (later)

2. Start a Django project - django-admin startproject personal
3. 
